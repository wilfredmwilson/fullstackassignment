{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Configure multer for file uploads\nconst upload = multer({\n  dest: 'uploads/'\n});\n\n// Handle file upload\napp.post('/upload', upload.single('pdfFile'), (req, res) => {\n  // Handle file upload logic here\n  res.status(200).send('File uploaded successfully.');\n});\n\n// Start server\napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","multer","path","app","PORT","process","env","upload","dest","post","single","req","res","status","send","listen","console","log"],"sources":["C:/Users/user/Desktop/project/src/view/pdfextractor.jsx"],"sourcesContent":["const express = require('express');\r\nconst multer = require('multer');\r\nconst path = require('path');\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3001;\r\n\r\n// Configure multer for file uploads\r\nconst upload = multer({ dest: 'uploads/' });\r\n\r\n// Handle file upload\r\napp.post('/upload', upload.single('pdfFile'), (req, res) => {\r\n  // Handle file upload logic here\r\n  res.status(200).send('File uploaded successfully.');\r\n});\r\n\r\n// Start server\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;;AAErC;AACA,MAAMG,MAAM,GAAGN,MAAM,CAAC;EAAEO,IAAI,EAAE;AAAW,CAAC,CAAC;;AAE3C;AACAL,GAAG,CAACM,IAAI,CAAC,SAAS,EAAEF,MAAM,CAACG,MAAM,CAAC,SAAS,CAAC,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC1D;EACAA,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,6BAA6B,CAAC;AACrD,CAAC,CAAC;;AAEF;AACAX,GAAG,CAACY,MAAM,CAACX,IAAI,EAAE,MAAM;EACrBY,OAAO,CAACC,GAAG,CAAE,yCAAwCb,IAAK,EAAC,CAAC;AAC9D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}